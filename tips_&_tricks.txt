# When dealing with Booleans it is better to use the whole conditions than using True and False

# Can use dictionary to deal with codechef problems where you need to compare entities- 
For example- Green>Blue>Brown gene order and choosing the better gene in every 2 parents can be dealt with using-
x = {'Green':1,'Blue':0,'Brown': -1}

#For movement questions- a distance forward in one step and b distance backward in one step:
Can use (a-b)*(k/2) + (a-b)*(k%2) total distance travelled in k steps

#When looking at festival holidays, used this code for tackling unrequired date numbers:
i=int(input())
for j in range(i):
    k = int(input())
    c = 8
    for m in input().split():
        if not((int(m)%7 == 6)) and not((int(m)%7 == 0)):
            c = c + 1
    print(c)
    
#For reading inputs without explicitly mentioning- used a counter- but it threw an error:
i = int(input())
for j in range(i):
    a = 0
    b = 0
    c = 0
    for m in input().split():
        if c%2 == 0:
            a += int(m)
        else:
            b += int(m)
        c+=1
    if a>b:
        print(1)
    else:
        print(2)

#When asked for lowest nearest integer use p//q:
i = int(input())
for j in range(i):
    h,x,y,c = map(int,input().split())
    if h*(x + (y//2)) <= c:
        print('YES')
    else:
        print('NO')
        
#Place where I had to include a "=" sign to pass the test cases- Maximum possible sum for 2 nums out of 3
i =int(input())
for j in range(i):
    a,b,c = map(int,input().split())
    if (c <= a) and (c <= b):
        print (a + b)
    elif (b <= a) and (b <= c):
        print (a + c)
    else:
        print (b + c)
        
